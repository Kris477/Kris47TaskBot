{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/types/events.ts"],"names":[],"mappings":"","sourcesContent":["import { flag, hexColor } from \"./socket.io\";\n\nexport interface User {\n    color: hexColor;\n    flags: flag[];\n    ID: string;\n    sessionID: string;\n    nickname: string;\n}\n\nexport type Message = {\n    type: \"text\";\n\n    color: hexColor;\n    content: string;\n    date: Date;\n    author: User;\n};\n\nexport type NickChangeInfo = {\n    user: User;\n    oldNickname: string;\n    newNickname: string;\n};\n\ntype SysMessageType = \"info\" | \"error\" | \"success\";\n\nexport type SysMessage<Type extends SysMessageType = \"info\" | \"error\" | \"success\"> = {\n    type: Type;\n    message: string;\n    isHTML: boolean;\n};\n\nexport type TagAddInfo = {\n    user: User;\n    newTag: string;\n    newTagLabel: string\n};\n\ntype ClientEvents = {\n    /** Fired on disconnect. */\n    disconnected: () => void;\n\n    /** Fired when a message is received. */\n    message: (message: Message) => void;\n\n    /**\n     * Fired when a \"GUI error\" occurs.\n     * This is can be any error which doesn't disconnect you as a result.\n     */\n    werror: (reason: string | \"message too long\" | \"You are doing this too much - please wait!\") => void;\n\n    /** Fired when someone changes their nickname. */\n    \"nick-change\": (nickChangeInfo: NickChangeInfo) => void;\n\n    /** Fired when any system message is received */\n    \"sys-message\": (sysMessage: SysMessage) => void;\n\n    /** Fired when a system message is received of type `info` */\n    \"sys-message-info\": (sysMessage: SysMessage<\"info\">) => void;\n\n    /** Fired when a system message is received of type `error` */\n    \"sys-message-error\": (sysMessage: SysMessage<\"error\">) => void;\n\n    /** Fired when a system message is received of type `success` */\n    \"sys-message-success\": (sysMessage: SysMessage<\"success\">) => void;\n\n    /** Fired when a user joins. */\n    \"user-join\": (user: User) => void;\n\n    /** Fired when a user leaves. */\n    \"user-leave\": (user: User) => void;\n\n    /** Fired when a user gets a new tag. */\n    \"tag-add\": (tagAddInfo: TagAddInfo) => void;\n};\n\nexport default ClientEvents;"]}