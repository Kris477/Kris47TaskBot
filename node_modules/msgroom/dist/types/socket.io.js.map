{"version":3,"file":"socket.io.js","sourceRoot":"","sources":["../../src/types/socket.io.ts"],"names":[],"mappings":"","sourcesContent":["import { Socket } from \"socket.io-client\";\nimport { EventNames } from \"@socket.io/component-emitter\";\n\ntype MsgroomSocket = Socket<ServerToClientEvents, ClientToServerEvents>;\nexport default MsgroomSocket;\n\ntype ReservedEventNames = \"connect\" | \"connect_error\" | \"disconnect\";\nexport type ServerToClientEventNames = EventNames<ServerToClientEvents> | ReservedEventNames;\nexport type ClientToServerEventNames = EventNames<ClientToServerEvents>;\n\n/**\n * Hexadecimal color string\n * @example \"#ff0000\"\n */\nexport type hexColor = `#${string}`;\n\nexport type flag = \"staff\" | \"bot\";\n\nexport interface RawUser {\n    color: hexColor;\n    flags: flag[];\n    id: string;\n    session_id: string;\n    user: string;\n}\n\nexport type RawMessage = {\n    color: hexColor;\n    content: string;\n    date: string;\n    id: string;\n    session_id: string;\n    type: \"text\";\n    user: string;\n};\n\nexport type RawNickChangeInfo = {\n    oldUser: string;\n    newUser: string;\n    id: string;\n    session_id: string;\n};\n\nexport type RawUserLeaveInfo = {\n    id: string;\n    session_id: string;\n    user: string;\n};\n\nexport type RawSysMessage = {\n    message: string;\n    type: \"info\" | \"error\" | \"success\";\n    isHtml: boolean;\n};\n\nexport type RawUserUpdateInfo = {\n    /** The session ID of the affected user. */\n    user: string;\n\n    type: \"tag-add\";\n    tag?: flag;\n    tagLabel?: string;\n};\n\n/**\n * used for receiving events from the server\n */\nexport interface ServerToClientEvents {\n    \"auth-complete\": (userID: string) => void;\n    message: (message: RawMessage) => void;\n    \"sys-message\": (sysMessage: RawSysMessage) => void;\n    \"nick-changed\": (nickChangeInfo: RawNickChangeInfo) => void;\n    \"user-join\": (user: RawUser) => void;\n    \"user-leave\": (userLeaveInfo: RawUserLeaveInfo) => void;\n    \"user-update\": (userUpdateInfo: RawUserUpdateInfo) => void;\n    online: (users: RawUser[]) => void;\n    \"auth-error\": (error: {\n        /**\n         * \"there is no auth-error lol\" - ctrlz\n         */\n        reason: string;\n    }) => void;\n    \"werror\": (\n        /** A generic error, which doesn't cause disconnects. For example ratelimiting errors would send this event. Is currently never called by the server. */\n        reason: string | \"You are doing this too much - please wait!\"\n    ) => void;\n}\n\n/**\n * used to send events to the server\n */\nexport interface ClientToServerEvents {\n    \"admin-action\": (options: {\n        /**\n         * We currently have no idea what this could be, apart from what the type must be according to the code of the official msgroom client.\n         */\n        args: string[];\n    }) => void;\n    \n    message: (options: {\n        /**\n         * The type of message, so far I know only text is supported right now.\n         */\n        type: \"text\";\n        /**\n         * The text message you want to send.\n         */\n        content: string;\n    }) => void;\n    \n    \"change-user\": (/** The new nickname you want. */newNick: string) => void;\n    \n    online: () => void;\n    \n    auth: (options: {\n        /**\n         * The username you want to use.\n         */\n        user: string;\n        /**\n         * You can request one from ctrlz\n         */\n        apikey?: string;\n    }) => void;\n}"]}