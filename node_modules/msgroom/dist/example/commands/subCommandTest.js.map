{"version":3,"file":"subCommandTest.js","sourceRoot":"","sources":["../../../src/example/commands/subCommandTest.ts"],"names":[],"mappings":";;AAEA,MAAM,UAAU,GAA6B,MAAM,CAAC,EAAE,CAAC,CAAC;IACpD,IAAI,EAAS,gBAAgB;IAC7B,WAAW,EAAE,gDAAgD;IAC7D,OAAO,EAAM,GAAG,EAAE,CAAC,UAAU;IAC7B,WAAW,EAAE;QACT,IAAI,EAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,kBAAkB,EAAE;QACjD,IAAI,EAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,oBAAoB,EAAE;QACnD,UAAU,EAAE;YACR,WAAW,EAAE,uBAAuB;YACpC,OAAO,EAAM,GAAG,EAAE,CAAC,kBAAkB;YACrC,WAAW,EAAE;gBACT,aAAa,EAAE;oBACX,WAAW,EAAE,uCAAuC;oBACpD,OAAO,EAAM,GAAG,EAAE,CAAC,uCAAuC;iBAC7D;gBACD,MAAM,EAAE;oBACJ,WAAW,EAAE,8BAA8B;oBAC3C,OAAO,EAAM,GAAG,EAAE;wBACd,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;oBACzE,CAAC;oBACD,WAAW,EAAE;wBACT,GAAG,EAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE;wBAC9C,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS;qBACvC;iBACJ;aACJ;SACJ;KACJ;CACsB,CAAC,CAAC;AAE7B,kBAAe,UAAU,CAAC","sourcesContent":["import { CommandWithName, ModuleInitializeFunction } from \"../../types/types\";\n\nconst initialize: ModuleInitializeFunction = client => ({\n    name       : \"subCommandTest\",\n    description: \"hey look at that I can have a description now!\",\n    handler    : () => \"nothing?\",\n    subcommands: {\n        sub1      : { handler: () => \"first subcommand\" },\n        sub2      : { handler: () => \"another subcommand\" },\n        subCommand: {\n            description: \"This is a subcommand.\",\n            handler    : () => \"Not implemented.\",\n            subcommands: {\n                subSubcommand: {\n                    description: \"This is a subcommand of a subcommand.\",\n                    handler    : () => \"This is a subcommand of a subcommand.\",\n                },\n                stuff2: {\n                    description: \"I wonder what this one does.\",\n                    handler    : () => {\n                        throw new Error(\"Hey, when did this command start throwing errors?\");\n                    },\n                    subcommands: {\n                        sub      : { handler: () => \"yes subcommand\" },\n                        testError: client.commands.testError,\n                    },\n                },\n            },\n        },\n    },\n} satisfies CommandWithName);\n\nexport default initialize;"]}