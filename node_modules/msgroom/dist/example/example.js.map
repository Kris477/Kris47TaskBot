{"version":3,"file":"example.js","sourceRoot":"","sources":["../../src/example/example.ts"],"names":[],"mappings":";;;AAAA,mDAAwB;AAExB,yCAA8C;AAE9C,KAAK,CAAC,KAAK,IAAI,EAAE;IACb,MAAM,MAAM,GAAG,IAAI,WAAM,CAAC,aAAa,EAAE,GAAG,EAAE;QAC1C,WAAW,EAAE,IAAI;QACjB,UAAU,EAAG;;;CAGpB,CAAC,IAAI,EAAE;QACA,SAAS,EAAE,IAAI;KAClB,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;QAC3B,MAAM,MAAM,GAA2B;YACnC,KAAK,EAAU,KAAK;YACpB,IAAI,EAAW,IAAI;YACnB,IAAI,EAAW,IAAI;YACnB,aAAa,EAAE,aAAa;YAC5B,WAAW,EAAI,WAAW;YAC1B,YAAY,EAAG,UAAU;YACzB,WAAW,EAAI,UAAU;SAC5B,CAAC;QACF,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;YAAE,OAAO,KAAK,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACzF,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC;IAE7E,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG;QACnB,WAAW,EAAE,oBAAoB;QACjC,OAAO,EAAM,GAAG,EAAE,CAAC,OAAO;KAC7B,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG;QACrB,WAAW,EAAE,wBAAwB;QACrC,OAAO,EAAM,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;KACpD,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG;QACvB,WAAW,EAAE,mEAAmE;QAChF,OAAO,EAAM,OAAO,CAAC,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtB,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC9B,CAAC;KACJ,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG;QAC1B,WAAW,EAAE,+BAA+B;QAC5C,OAAO,EAAM,OAAO,CAAC,EAAE,CAAC,IAAA,6BAAiB,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC;KACxF,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG;QACxB,WAAW,EAAE,kBAAkB;QAC/B,OAAO,EAAM;YACT,CAAE,WAAW,CAAE;SAClB;QACD,OAAO,EAAE,GAAG,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC;KACJ,CAAC;IAEF,MAAM,MAAM,CAAC,wBAAwB,EAAE,CAAC;IACxC,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;IAEvB,sBAAsB;IACtB,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,EAAE,CAAC","sourcesContent":["import Client from \"..\";\n\nimport { formatWithOptions } from \"node:util\";\n\nvoid (async () => {\n    const client = new Client(\"[!] TestBot\", \"!\", {\n        printErrors: true,\n        helpSuffix : `\n*TestBot is a bot made by NanderTGA to test new [msgroom](https://npmjs.com/package/msgroom) features before releasing them.\nSince it is completely useless, it will go offline once I'm done testing things.*\n`.trim(),\n        blockSelf: true,\n    });\n\n    client.on(\"message\", message => {\n        const monkey: Record<string, string> = {\n            \"hey\"        : \"hey\",\n            \"gn\"         : \"gn\",\n            \"gm\"         : \"gm\",\n            \"goodmorning\": \"goodmorning\",\n            \"goodnight\"  : \"goodnight\",\n            \"who's joe?\" : \"Joe mama\",\n            \"who's joe\"  : \"Joe mama\",\n        };\n        if (monkey[message.content]) return void client.sendMessage(monkey[message.content]);\n    });\n\n    client.on(\"werror\", reason => void console.warn(\"Received werror:\", reason));\n\n    client.commands.ping = {\n        description: \"Replies with Pong!\",\n        handler    : () => \"Pong!\",\n    };\n\n    client.commands.repeat = {\n        description: \"Repeats what you said.\",\n        handler    : (context, ...args) => args.join(\" \"),\n    };\n\n    client.commands.sendTest = {\n        description: \"Uses `context.send()` and `context.reply()` to send some replies.\",\n        handler    : context => {\n            context.send(\"Sent!\");\n            context.reply(\"Replied!\");\n        },\n    };\n\n    client.commands.showContext = {\n        description: \"Returns the context argument.\",\n        handler    : context => formatWithOptions({ compact: false, colors: false }, context),\n    };\n\n    client.commands.testError = {\n        description: \"Throws an error.\",\n        aliases    : [\n            [ \"errorTest\" ],\n        ],\n        handler: () => {\n            throw new Error(\"fuck\");\n        },\n    };\n\n    await client.addCommandsFromDirectory();\n    await client.connect();\n\n    // will cause a werror\n    client.sendMessage(\"a\".repeat(2049));\n})();"]}