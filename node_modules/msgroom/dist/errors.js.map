{"version":3,"file":"errors.js","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":";;;AAAA,MAAa,SAAU,SAAQ,KAAK;IAChC,YACI,OAAgB,EAChB,OAAsB;QAEtB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAExB,IAAI,OAAO;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAVD,8BAUC;AAED,MAAa,eAAgB,SAAQ,KAAK;IACtC,YACI,OAAO,GAAG,oIAAoI,EAC9I,OAAsB;QAEtB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAE9B,IAAI,OAAO;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAVD,0CAUC;AAED,MAAa,iBAAkB,SAAQ,KAAK;IACxC,YACI,OAAO,GAAG,mFAAmF,EAC7F,OAAsB;QAEtB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,OAAO;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAVD,8CAUC;AAED,MAAa,eAAgB,SAAQ,KAAK;IACtC,YACI,OAAO,GAAG,yEAAyE,EACnF,OAAsB;QAEtB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAE9B,IAAI,OAAO;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAVD,0CAUC","sourcesContent":["export class AuthError extends Error {\n    constructor(\n        message?: string,\n        options?: ErrorOptions,\n    ) {\n        super(message);\n        this.name = \"AuthError\";\n\n        if (options) Object.assign(this, options);\n    }\n}\n\nexport class ConnectionError extends Error {\n    constructor(\n        message = \"Socket.io connection error. Do the server and client version match? Did you enter the right server details? Is the server running?\",\n        options?: ErrorOptions,\n    ) {\n        super(message);\n        this.name = \"ConnectionError\";\n\n        if (options) Object.assign(this, options);\n    }\n}\n\nexport class NotConnectedError extends Error {\n    constructor(\n        message = \"Not connected to a server! Connect to one first before using any other functions.\",\n        options?: ErrorOptions,\n    ) {\n        super(message);\n        this.name = \"NotConnectedError\";\n\n        if (options) Object.assign(this, options);\n    }\n}\n\nexport class ImpossibleError extends Error {\n    constructor(\n        message = \"This state is physically impossible, but typescript doesn't understand.\",\n        options?: ErrorOptions,\n    ) {\n        super(message);\n        this.name = \"ImpossibleError\";\n\n        if (options) Object.assign(this, options);\n    }\n}"]}