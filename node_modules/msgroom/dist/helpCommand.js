"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const helpCommand = (client) => ({
    description: "Shows information about a command.",
    handler: async (context, ...args) => {
        const erroredFiles = Array.from(client.erroredFiles).map(file => (0, path_1.basename)(file)).join(", ");
        if (client.erroredFiles.size > 0)
            context.send(`**An error occurred while loading the following files:** ${erroredFiles}.
**Some features may be unavailable at this time.**
If you are the developer of this bot and need more information, check the console.
We apologize for the inconvenience.`);
        if (args.length < 1) {
            let output = `
**The current ${client.prefixes.size > 1 ? "prefixes are" : "prefix is"} \`${Array.from(client.prefixes).join("`, `")}\`
Here's a list of all available commands. For more information on a command, run \`${client.mainPrefix}help <command>\`**
                `;
            const commandList = [];
            client.walkCommandOrMap(client.commands, (command, fullCommand) => {
                commandList.push(`\n${client.mainPrefix}${fullCommand.join(" ")} - *${command.description}*`);
            });
            output += commandList.sort().join("");
            output = output.trim() + "\n\n" + client.helpSuffix;
            if (output.trim().length > 2048)
                context.send("Error: output too long\nTODO [#44](https://github.com/NanderTGA/msgroom-orm/issues/44)");
            return output.trim();
        }
        const commandAndArguments = await client.getCommand(args);
        if (!commandAndArguments)
            return "The command you specified cannot be found.";
        const [command] = commandAndArguments;
        const aliases = command.aliases || [];
        return `
**Command:** ${command.name}
**Aliases:** ${aliases.length > 0 ? aliases.join(", ") : "*This command does not have any aliases*"}
**Description:** ${command.description || "*No description provided.*"}
            `.trim();
    },
});
exports.default = helpCommand;
//# sourceMappingURL=helpCommand.js.map