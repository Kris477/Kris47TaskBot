{"version":3,"file":"helpCommand.js","sourceRoot":"","sources":["../src/helpCommand.ts"],"names":[],"mappings":";;AAGA,+BAAgC;AAEhC,MAAM,WAAW,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAC;IACrC,WAAW,EAAE,oCAAoC;IACjD,OAAO,EAAM,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,EAAE,EAAE;QACpC,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAA,eAAQ,EAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5F,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC;YAAE,OAAO,CAAC,IAAI,CAC1C,4DAA4D,YAAY;;;oCAGhD,CAC3B,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,IAAI,MAAM,GAAI;gBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;oFACjC,MAAM,CAAC,UAAU;iBACpF,CAAC;YAEN,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,EAAE;gBAC9D,WAAW,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC;YAEH,MAAM,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACtC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC;YAEpD,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,IAAI;gBAAE,OAAO,CAAC,IAAI,CAAC,wFAAwF,CAAC,CAAC;YAExI,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;SACxB;QAED,MAAM,mBAAmB,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,mBAAmB;YAAE,OAAO,4CAA4C,CAAC;QAE9E,MAAM,CAAE,OAAO,CAAE,GAAG,mBAAmB,CAAC;QACxC,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QAEtC,OAAQ;eACD,OAAO,CAAC,IAAI;eACZ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0CAA0C;mBAChF,OAAO,CAAC,WAAW,IAAI,4BAA4B;aACzD,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;CACc,CAAC,CAAC;AAErB,kBAAe,WAAW,CAAC","sourcesContent":["import type Client from \".\";\nimport { Command } from \"./types/types\";\n\nimport { basename } from \"path\";\n\nconst helpCommand = (client: Client) => ({\n    description: \"Shows information about a command.\",\n    handler    : async (context, ...args) => {\n        const erroredFiles = Array.from(client.erroredFiles).map(file => basename(file)).join(\", \");\n        if (client.erroredFiles.size > 0) context.send(\n            `**An error occurred while loading the following files:** ${erroredFiles}.\n**Some features may be unavailable at this time.**\nIf you are the developer of this bot and need more information, check the console.\nWe apologize for the inconvenience.`,\n        );\n\n        if (args.length < 1) {\n            let output =  `\n**The current ${client.prefixes.size > 1 ? \"prefixes are\" : \"prefix is\"} \\`${Array.from(client.prefixes).join(\"`, `\")}\\`\nHere's a list of all available commands. For more information on a command, run \\`${client.mainPrefix}help <command>\\`**\n                `;\n\n            const commandList: string[] = [];\n\n            client.walkCommandOrMap(client.commands, (command, fullCommand) => {\n                commandList.push(`\\n${client.mainPrefix}${fullCommand.join(\" \")} - *${command.description}*`);\n            });\n\n            output += commandList.sort().join(\"\");\n            output = output.trim() + \"\\n\\n\" + client.helpSuffix;\n\n            if (output.trim().length > 2048) context.send(\"Error: output too long\\nTODO [#44](https://github.com/NanderTGA/msgroom-orm/issues/44)\");\n\n            return output.trim();\n        }\n\n        const commandAndArguments = await client.getCommand(args);\n        if (!commandAndArguments) return \"The command you specified cannot be found.\";\n\n        const [ command ] = commandAndArguments;\n        const aliases = command.aliases || [];\n\n        return  `\n**Command:** ${command.name}\n**Aliases:** ${aliases.length > 0 ? aliases.join(\", \") : \"*This command does not have any aliases*\"}\n**Description:** ${command.description || \"*No description provided.*\"}\n            `.trim();\n    },\n} satisfies Command);\n\nexport default helpCommand;"]}